# This is an example plymouth plugin script

# Load the images.
background_image = Image("boulder_1.png");
spaceship_image = Image("spaceship.png");
ray_image = Image("death_ray.png");
balloon_image_med = Image("balloon1_med.png");
balloon_image_sm = Image("balloon1_sm.png");

# Create sprites.
background_sprite = Sprite(background_image);
spaceship_sprite = Sprite(spaceship_image);
ray_sprite = Sprite(ray_image);
b1_sprite = Sprite(balloon_image_sm);
b2_sprite = Sprite(balloon_image_med);

# Resize background to file entire screen.
screen_width = Window.GetWidth();
screen_height = Window.GetHeight();
resized_background_image = background_image.Scale(screen_width, screen_height);
background_sprite.SetImage(resized_background_image);

# Callback loop is called each time the screen refreshes, nominally 50 Hz.
count = 0;
sx = 0;
sy = 0;
xinc = 1;
yinc = 1;
b1_inc = -1;
b1x = 150;
b1y = screen_height/2;
b2_inc = -1;
b2x = 800;
b2y = screen_height;
b1s_inc = 1;
b2s_inc = -1;
fun refresh_callback ()
  {
	# Keep the spaceship on the screen.
  	sx = sx + xinc;
	if (sx > screen_width - 150) {
	   xinc = -1;
        }
	if (sx < 0) {
	   xinc = 1;
        }
	if (sy > screen_height - 150) {
	   yinc = -1;
        }
	if (sy < 0) {
	   yinc = 1;
        }

	# Move the spaceship.
	sx = sx + xinc;
	sy = sy + yinc;
	spaceship_sprite.SetPosition(sx, sy, 11);

	# Keep balloons on the screen.
	if (b1y < 0) {
	   b1_inc = 1;
        }
	if (b1y > screen_height) {
	   b1_inc = -1;
        }
	if (b2y < 0) {
	   b2_inc = 1;
        }
	if (b2y > screen_height) {
	   b2_inc = -1;
        }
	if (b1x < 0) {
	   b1s_inc = 1;
        }
	if (b1x > screen_width) {
	   b1s_inc = -1;
        }
	if (b2x < 0) {
	   b2s_inc = 1;
        }
	if (b2x > screen_width) {
	   b2s_inc = -1;
        }

	# Move the balloons.
	b1y = b1y + b1_inc;
	b1x = b1x + b1s_inc;
	b2y = b2y + b2_inc;
	b2x = b2x + b2s_inc;
	b1_sprite.SetPosition(b1x, b1y, 10);
	b2_sprite.SetPosition(b2x, b2y, 8);

	# Fire the death ray.
	ray_sprite.SetPosition(sx - 320, sy + 80, 10);
	if (sy > 100 && sy < 125 || sy > 400 && sy < 425) {
		ray_sprite.SetOpacity(1);
	} else {
		ray_sprite.SetOpacity(0);
	}

	count++;	
  }
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Progress Bar --------------------------------

progress_box.image = Image("progress_box.png");
progress_box.sprite = Sprite(progress_box.image);

progress_box.x = Window.GetWidth()  / 2 -    progress_box.image.GetWidth()  / 2;
progress_box.y = Window.GetHeight() * 0.75 - progress_box.image.GetHeight() / 2;
progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);

progress_bar.original_image = Image("progress_bar.png");
progress_bar.sprite = Sprite();

progress_bar.x = Window.GetWidth()  / 2 -        progress_bar.original_image.GetWidth() / 2;
progress_bar.y = Window.GetHeight() / 2 * 1.5  - progress_box.image.GetHeight() / 2 + (progress_box.image.GetHeight() - progress_bar.original_image.GetHeight()) / 2;
progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);

fun progress_callback (duration, progress)
  {
    if (progress_bar.image.GetWidth () != Math.Int (progress_bar.original_image.GetWidth () * progress))
      {
        progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * progress, progress_bar.original_image.GetHeight());
        progress_bar.sprite.SetImage (progress_bar.image);
      }
  }

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
